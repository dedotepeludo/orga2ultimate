/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SimulacionBanquero.java
 *
 * Created on Aug 6, 2009, 1:22:22 PM
 */
package guidemo;

import java.awt.GridLayout;
import javax.swing.GroupLayout;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.TitledBorder;
import java.awt.Color;
import java.awt.Font;
import java.awt.Label;

/**
 *
 * @author mlopez
 */
public class SimulacionBanquero extends javax.swing.JFrame {

    private JTextField[][] matrizTiene;
    private JTextField[][] matrizMaximo;
    private JTextField[] vectorDisponible;
    private Label[] pasos;

    /** Creates new form SimulacionBanquero */
    public SimulacionBanquero() {
        initComponents2();
        initComponents();
    }

    public void llenar(String arg) {
        //resultado.setText(arg);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(guidemo.GUIDemoApp.class).getContext().getResourceMap(SimulacionBanquero.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(jButton1)
                .addContainerGap(396, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(390, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        for (Integer i = 0; i < this.matrizTiene.length; i++) {
            for (Integer j = 0; j < this.matrizTiene.length; j++) {
                Integer unNumeroAleatorio = ((int) (Math.random() * 10) % 5) + 1;
                this.matrizTiene[i][j].setText(unNumeroAleatorio.toString());
            }
            this.matrizTiene[i][3].setBackground(Color.RED);
            this.matrizTiene[i][3].setForeground(Color.GREEN);

            Font f = this.matrizTiene[i][3].getFont();
            Font fBold = new Font(f.getName(), Font.BOLD, f.getSize()+1);
            this.matrizTiene[3][i].setFont(fBold);

        }

    }//GEN-LAST:event_jButton1MouseClicked

    private void initComponents2() {
        JPanel matTiene = new JPanel();
        matTiene.setBorder(new TitledBorder("Matriz de tiene"));
        //componentes.setToolTipText("Ac치 se ve lo que tiene cada proceso");

        GridLayout layout1 = new GridLayout(9, 9);
        layout1.setHgap(2);
        layout1.setVgap(2);

        this.matrizTiene = new JTextField[8][8];

        matTiene.setLayout(layout1);

        matTiene.add(new Label(" "));
        for (Integer i = 0; i <= 7; i++) {
            matTiene.add(new Label("  R" + (i+1)));
        }
        for (Integer i = 0; i <= 7; i++) {
            matTiene.add(new Label("P" + (i+1)));
            for (Integer j = 0; j <= 7; j++) {
                this.matrizTiene[i][j] = new JTextField(2);
                this.matrizTiene[i][j].setText(i + ", " + j);
                this.matrizTiene[i][j].setHorizontalAlignment(JTextField.CENTER);
                this.matrizTiene[i][j].setEditable(false);
                this.matrizTiene[i][j].setToolTipText("Cantidad del recurso " + j + " que tiene el proceso " + i + "." );
                matTiene.add(this.matrizTiene[i][j]);
            }
        }

        JPanel matMaximos = new JPanel();
        matMaximos.setBorder(new TitledBorder("Matriz de m치ximos"));
        //componentes.setToolTipText("Ac치 se ve lo que tiene cada proceso");

        GridLayout layout2 = new GridLayout(9, 9);
        layout2.setHgap(2);
        layout2.setVgap(2);

        this.matrizMaximo = new JTextField[8][8];

        matMaximos.setLayout(layout2);

        matMaximos.add(new Label(" "));
        for (Integer i = 0; i <= 7; i++) {
            matMaximos.add(new Label("  R" + (i+1)));
        }
        for (Integer i = 0; i <= 7; i++) {
            matMaximos.add(new Label("P" + (i+1)));
            for (Integer j = 0; j <= 7; j++) {
                this.matrizMaximo[i][j] = new JTextField(2);
                this.matrizMaximo[i][j].setText(i + ", " + j);
                this.matrizMaximo[i][j].setHorizontalAlignment(JTextField.CENTER);
                this.matrizMaximo[i][j].setEditable(false);
                this.matrizMaximo[i][j].setToolTipText("Cantidad del recurso " + j + " que tiene el proceso " + i + "." );
                matMaximos.add(this.matrizMaximo[i][j]);
            }
        }


        JPanel vectDisponibles = new JPanel();
        vectDisponibles.setBorder(new TitledBorder("Recursos Disponibles"));
        //componentes.setToolTipText("Ac치 se ve lo que tiene cada proceso");

        GridLayout layout3 = new GridLayout(2, 8);
        layout3.setHgap(2);
        layout3.setVgap(2);

        this.vectorDisponible = new JTextField[8];

        vectDisponibles.setLayout(layout3);

        for (Integer i = 0; i <= 7; i++) {
            vectDisponibles.add(new Label("  R" + (i+1)));
        }
        for (Integer i = 0; i <= 7; i++) {
            this.vectorDisponible[i] = new JTextField(2);
            this.vectorDisponible[i].setText(i.toString());
            this.vectorDisponible[i].setHorizontalAlignment(JTextField.CENTER);
            this.vectorDisponible[i].setEditable(false);
            this.vectorDisponible[i].setToolTipText("Cantidad del recurso " + i + " disponible." );
            vectDisponibles.add(this.vectorDisponible[i]);
        }


         JPanel consolaControl = new JPanel();
         llenarConsola(consolaControl);


        GroupLayout layout = new GroupLayout(getContentPane());

        //PanelBuilder builder = new PanelBuilder(layout);
        getContentPane().setLayout(layout);

        layout.setAutoCreateGaps(true);
        layout.setAutoCreateContainerGaps(true);



        layout.setHorizontalGroup(
                layout.createSequentialGroup() //.addGap(160,260,36)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(matTiene)
                    .addComponent(vectDisponibles)
                )
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(matMaximos) //.addGap(180, Short.MAX_VALUE))
                    .addComponent(consolaControl)
                    )
                );
        layout.setVerticalGroup(
                layout.createSequentialGroup() //.addGap(160,260,36)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(matTiene)
                    .addComponent(matMaximos) //.addGap(180, Short.MAX_VALUE))

                 )
                 .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(vectDisponibles)
                    .addComponent(consolaControl)
                    )
                );
        pack();

    }// </editor-fold>

    private void llenarConsola(JPanel consola){
        consola.setBorder(new TitledBorder("Control"));

        this.pasos = new Label[10];
        this.pasos[0] = new Label("Entrega el pedido y se corre el algoritmo de seguridad para ver si encuentra una secuencia segura.");

        consola.add(this.pasos[0]);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SimulacionBanquero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
